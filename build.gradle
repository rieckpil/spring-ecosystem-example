buildscript {
	ext {
		springBootVersion = '1.5.9.RELEASE'
	}
	repositories {
		mavenCentral()
		maven { url "https://repo.spring.io/snapshot" }
		maven { url "https://repo.spring.io/milestone" }
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath("org.asciidoctor:asciidoctorj-pdf:1.5.0-alpha.15")
		classpath("se.transmode.gradle:gradle-docker:1.2")
	}
	
}

plugins { id "org.asciidoctor.convert" version "1.5.3"}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'docker'
apply plugin: 'org.asciidoctor.convert'

group = 'de.rieckpil'
version = '1.0.0-RELEASE'
sourceCompatibility = 1.8

repositories {
	mavenCentral()
	maven { url "https://repo.spring.io/snapshot" }
	maven { url "https://repo.spring.io/milestone" }
}


dependencies {
	compile('org.springframework.boot:spring-boot-starter-actuator')
	compile('org.springframework.boot:spring-boot-starter-data-jpa')
	compile('org.springframework.boot:spring-boot-starter-security')
	compile('org.springframework.boot:spring-boot-starter-web')
	compile('org.fluentd:fluent-logger:0.3.2')
	compile('com.sndyuk:logback-more-appenders:1.4.2')
	compile('com.h2database:h2')
	runtime('org.springframework.boot:spring-boot-devtools')
	compileOnly('org.projectlombok:lombok')
	testCompile('org.springframework.boot:spring-boot-starter-test')
	testCompile('org.springframework.security:spring-security-test')
}

asciidoctor {
	backends 'html5', 'pdf','docbook'
 }
 
 task buildDocker(type: Docker) {
  applicationName = jar.baseName
  baseImage = 'openjdk:latest'
  push = project.hasProperty('push')
  tag = project.group + "/" + applicationName
  addFile {
    from jar
    rename {'app.jar'}
  }
  entryPoint(['java', '-Djava.security.egd=file:/dev/./urandom', '-jar', '/app.jar'])
}

buildDocker.dependsOn(build)
